# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-29 02:43
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assets_type', models.CharField(choices=[('server', '服务器'), ('switch', '交换机'), ('route', '路由器'), ('printer', '打印机'), ('scanner', '扫描仪'), ('firewall', '防火墙'), ('storage', '存储设备'), ('wifi', '无线设备')], default='server', max_length=100, verbose_name='资产类型')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='资产编号')),
                ('sn', models.CharField(max_length=100, verbose_name='设备序列号')),
                ('buy_time', models.DateField(blank=True, null=True, verbose_name='购买时间')),
                ('expire_date', models.DateField(blank=True, null=True, verbose_name='过保修期')),
                ('buy_user', models.CharField(blank=True, max_length=100, null=True, verbose_name='购买人')),
                ('management_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='管理IP')),
                ('manufacturer', models.CharField(blank=True, max_length=100, null=True, verbose_name='制造商')),
                ('provider', models.CharField(blank=True, max_length=100, null=True, verbose_name='供货商')),
                ('model', models.CharField(blank=True, max_length=100, null=True, verbose_name='资产型号')),
                ('status', models.SmallIntegerField(blank=True, null=True, verbose_name='状态')),
                ('put_zone', models.SmallIntegerField(blank=True, null=True, verbose_name='放置区域')),
                ('group', models.SmallIntegerField(blank=True, null=True, verbose_name='使用组')),
                ('business', models.SmallIntegerField(blank=True, null=True, verbose_name='业务类型')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '总资产表',
                'db_table': 'opssytem_assets',
                'permissions': (('can_read_assets', '读取资产权限'), ('can_change_assets', '更改资产权限'), ('can_add_assets', '添加资产权限'), ('can_delete_assets', '删除资产权限')),
                'verbose_name_plural': '总资产表',
            },
        ),
        migrations.CreateModel(
            name='Disk_Assets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_volume', models.CharField(blank=True, max_length=100, null=True, verbose_name='硬盘容量')),
                ('device_status', models.CharField(blank=True, max_length=100, null=True, verbose_name='硬盘状态')),
                ('device_model', models.CharField(blank=True, max_length=100, null=True, verbose_name='硬盘型号')),
                ('device_brand', models.CharField(blank=True, max_length=100, null=True, verbose_name='硬盘生产商')),
                ('device_serial', models.CharField(blank=True, max_length=100, null=True, verbose_name='硬盘序列号')),
                ('device_slot', models.SmallIntegerField(blank=True, null=True, verbose_name='硬盘插槽')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now_add=True)),
                ('assets', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmdb.Assets')),
            ],
            options={
                'verbose_name': '磁盘资产表',
                'db_table': 'opssytem_disk_assets',
                'permissions': (('can_read_disk_assets', '读取磁盘资产权限'), ('can_change_disk_assets', '更改磁盘资产权限'), ('can_add_disk_assets', '添加磁盘资产权限'), ('can_delete_disk_assets', '删除磁盘资产权限')),
                'verbose_name_plural': '磁盘资产表',
            },
        ),
        migrations.CreateModel(
            name='Line_Assets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': '出口线路资产表',
                'db_table': 'opssytem_line_assets',
                'permissions': (('can_read_line_assets', '读取出口线路资产权限'), ('can_change_line_assetss', '更改出口线路资产权限'), ('can_add_line_assets', '添加出口线路资产权限'), ('can_delete_line_assets', '删除出口线路资产权限')),
                'verbose_name_plural': '出口线路资产表',
            },
        ),
        migrations.CreateModel(
            name='Log_Assets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assets_id', models.IntegerField(blank=True, default=None, null=True, verbose_name='资产类型id')),
                ('assets_user', models.CharField(default=None, max_length=50, verbose_name='操作用户')),
                ('assets_content', models.CharField(default=None, max_length=100, verbose_name='名称')),
                ('assets_type', models.CharField(default=None, max_length=50)),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='执行时间')),
            ],
            options={
                'verbose_name': '项目配置操作记录表',
                'db_table': 'opssytem_log_assets',
                'verbose_name_plural': '项目配置操作记录表',
            },
        ),
        migrations.CreateModel(
            name='Network_Assets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bandwidth', models.CharField(blank=True, max_length=100, null=True, verbose_name='背板带宽')),
                ('ip', models.CharField(blank=True, max_length=100, null=True, verbose_name='管理ip')),
                ('port_number', models.SmallIntegerField(blank=True, null=True, verbose_name='端口个数')),
                ('firmware', models.CharField(blank=True, max_length=100, null=True, verbose_name='固件版本')),
                ('cpu', models.CharField(blank=True, max_length=100, null=True, verbose_name='cpu型号')),
                ('stone', models.CharField(blank=True, max_length=100, null=True, verbose_name='内存大小')),
                ('configure_detail', models.TextField(blank=True, max_length=100, null=True, verbose_name='配置说明')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now_add=True)),
                ('assets', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cmdb.Assets')),
            ],
            options={
                'verbose_name': '网络资产表',
                'db_table': 'opssytem_network_assets',
                'permissions': (('can_read_network_assets', '读取网络资产权限'), ('can_change_network_assets', '更改网络资产权限'), ('can_add_network_assets', '添加网络资产权限'), ('can_delete_network_assets', '删除网络资产权限')),
                'verbose_name_plural': '网络资产表',
            },
        ),
        migrations.CreateModel(
            name='NetworkCard_Assets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('macaddress', models.CharField(max_length=64, unique=True, verbose_name='MAC')),
                ('ipaddress', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('device_model', models.CharField(blank=True, max_length=100, null=True, verbose_name='网卡型号')),
                ('device_brand', models.CharField(blank=True, max_length=100, null=True, verbose_name='网卡生产商')),
                ('device_status', models.CharField(blank=True, max_length=100, null=True, verbose_name='网卡状态')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now_add=True)),
                ('assets', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmdb.Assets')),
            ],
            options={
                'verbose_name': '网卡资产表',
                'db_table': 'opssytem_networkcard_assets',
                'permissions': (('can_read_networkcard_assets', '读取网卡资产权限'), ('can_change_networkcard_assets', '更改网卡资产权限'), ('can_add_networkcard_assets', '添加网卡资产权限'), ('can_delete_networkcard_assets', '删除网卡资产权限')),
                'verbose_name_plural': '网卡资产表',
            },
        ),
        migrations.CreateModel(
            name='Raid_Assets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raid_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Raid资产表',
                'db_table': 'opssytem_raid_assets',
                'permissions': (('can_read_raid_assets', '读取Raid资产权限'), ('can_change_raid_assets', '更改Raid资产权限'), ('can_add_raid_assets', '添加Raid资产权限'), ('can_delete_raid_assets', '删除Raid资产权限')),
                'verbose_name_plural': 'Raid资产表',
            },
        ),
        migrations.CreateModel(
            name='Ram_Assets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_model', models.CharField(blank=True, max_length=100, null=True, verbose_name='内存型号')),
                ('device_volume', models.CharField(blank=True, max_length=100, null=True, verbose_name='内存容量')),
                ('device_brand', models.CharField(blank=True, max_length=100, null=True, verbose_name='内存生产商')),
                ('device_slot', models.SmallIntegerField(blank=True, null=True, verbose_name='内存插槽')),
                ('device_status', models.CharField(blank=True, max_length=100, null=True, verbose_name='内存状态')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now_add=True)),
                ('assets', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmdb.Assets')),
            ],
            options={
                'verbose_name': '内存资产表',
                'db_table': 'opssytem_ram_assets',
                'permissions': (('can_read_ram_assets', '读取内存资产权限'), ('can_change_ram_assets', '更改内存资产权限'), ('can_add_ram_assets', '添加内存资产权限'), ('can_delete_ram_assets', '删除内存资产权限')),
                'verbose_name_plural': '内存资产表',
            },
        ),
        migrations.CreateModel(
            name='Server_Assets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('hostname', models.CharField(blank=True, max_length=100, null=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('passwd', models.CharField(blank=True, max_length=100, null=True)),
                ('keyfile', models.SmallIntegerField(blank=True, null=True)),
                ('port', models.DecimalField(blank=True, decimal_places=0, max_digits=6, null=True)),
                ('line', models.CharField(blank=True, max_length=100, null=True)),
                ('cpu', models.CharField(blank=True, max_length=100, null=True)),
                ('cpu_number', models.SmallIntegerField(blank=True, null=True)),
                ('vcpu_number', models.SmallIntegerField(blank=True, null=True)),
                ('cpu_core', models.SmallIntegerField(blank=True, null=True)),
                ('disk_total', models.CharField(blank=True, max_length=100, null=True)),
                ('ram_total', models.CharField(blank=True, max_length=100, null=True)),
                ('kernel', models.CharField(blank=True, max_length=100, null=True)),
                ('selinux', models.CharField(blank=True, max_length=100, null=True)),
                ('swap', models.CharField(blank=True, max_length=100, null=True)),
                ('raid', models.SmallIntegerField(blank=True, null=True)),
                ('system', models.CharField(blank=True, max_length=100, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now_add=True)),
                ('assets', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cmdb.Assets')),
            ],
            options={
                'verbose_name': '服务器资产表',
                'db_table': 'opssytem_server_assets',
                'permissions': (('can_read_server_assets', '读取服务器资产权限'), ('can_change_server_assets', '更改服务器资产权限'), ('can_add_server_assets', '添加服务器资产权限'), ('can_delete_server_assets', '删除服务器资产权限')),
                'verbose_name_plural': '服务器资产表',
            },
        ),
        migrations.CreateModel(
            name='Service_Assets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': '业务分组表',
                'db_table': 'opssytem_service_assets',
                'permissions': (('can_read_service_assets', '读取业务资产权限'), ('can_change_service_assets', '更改业务资产权限'), ('can_add_service_assets', '添加业务资产权限'), ('can_delete_service_assets', '删除业务资产权限')),
                'verbose_name_plural': '业务分组表',
            },
        ),
        migrations.CreateModel(
            name='Zone_Assets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': '机房资产表',
                'db_table': 'opssytem_zone_assets',
                'permissions': (('can_read_zone_assets', '读取机房资产权限'), ('can_change_zone_assets', '更改机房资产权限'), ('can_add_zone_assets', '添加机房资产权限'), ('can_delete_zone_assets', '删除机房资产权限')),
                'verbose_name_plural': '机房资产表',
            },
        ),
        migrations.AlterUniqueTogether(
            name='ram_assets',
            unique_together=set([('assets', 'device_slot')]),
        ),
        migrations.AlterUniqueTogether(
            name='disk_assets',
            unique_together=set([('assets', 'device_slot')]),
        ),
    ]
